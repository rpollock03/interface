# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

type Tournament
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read] }
      # TODO creator of tournament can update/delete tournament?
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  players: [Player] @manyToMany(relationName: "TournamentPlayer")
  region: String
  name: String
  description: String
  game: Game @hasOne
  time: AWSDateTime
  prize: Float
  prize_currency: String
  creator: String
  platform: String
}

type Player
  @model
  @auth(
    rules: [
      # TODO owner can edit their profile?
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  userId: ID
  username: String
  email: AWSEmail
  date_of_birth: AWSDateTime
  password: String
  # TODO profile_pic
  is_active: Boolean
  tournaments: [Tournament] @manyToMany(relationName: "TournamentPlayer")
  points: Int
  accounts: [GameAccount] @hasMany
  title: String!
  teams: [Team] @manyToMany(relationName: "TeamMember")
  friends: [Player] @hasMany
}

type Game
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read] }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String
  tournaments: [Tournament] @hasMany
  # TODO picture: S3Object
}

type GameAccount
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read] }
      { allow: public, operations: [read] }
    ]
  ) {
  tag: String
  platform: String
}

type Team
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read] }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  players: [Player] @manyToMany(relationName: "TeamMember")
}
